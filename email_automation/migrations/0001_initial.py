# Generated by Django 5.2.1 on 2025-08-16 11:27

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('courses', '0001_initial'),
        ('payments', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EmailTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email_type', models.CharField(choices=[('enrollment', 'Course Enrollment'), ('demo_completed', 'Post-Demo Class'), ('payment_confirmation', 'Payment Confirmation'), ('weekly_progress', 'Weekly Progress'), ('new_content', 'New Content Notification')], max_length=20, unique=True)),
                ('subject', models.CharField(max_length=200)),
                ('html_content', models.TextField()),
                ('text_content', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'email_templates',
            },
        ),
        migrations.CreateModel(
            name='EmailLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_type', models.CharField(choices=[('enrollment', 'Course Enrollment'), ('demo_completed', 'Post-Demo Class'), ('payment_confirmation', 'Payment Confirmation'), ('weekly_progress', 'Weekly Progress'), ('new_content', 'New Content Notification')], max_length=20)),
                ('subject', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('failed', 'Failed'), ('delivered', 'Delivered'), ('opened', 'Opened'), ('clicked', 'Clicked')], default='pending', max_length=20)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('opened_at', models.DateTimeField(blank=True, null=True)),
                ('clicked_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='courses.course')),
                ('enrollment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='courses.enrollment')),
                ('payment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='payments.payment')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'email_logs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EmailPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrollment_emails', models.BooleanField(default=True)),
                ('demo_emails', models.BooleanField(default=True)),
                ('payment_emails', models.BooleanField(default=True)),
                ('progress_emails', models.BooleanField(default=True)),
                ('content_emails', models.BooleanField(default=True)),
                ('is_subscribed', models.BooleanField(default=True)),
                ('unsubscribed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'email_preferences',
            },
        ),
        migrations.CreateModel(
            name='EmailQueue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_type', models.CharField(choices=[('enrollment', 'Course Enrollment'), ('demo_completed', 'Post-Demo Class'), ('payment_confirmation', 'Payment Confirmation'), ('weekly_progress', 'Weekly Progress'), ('new_content', 'New Content Notification')], max_length=20)),
                ('subject', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('priority', models.CharField(choices=[('low', 'Low'), ('normal', 'Normal'), ('high', 'High'), ('urgent', 'Urgent')], default='normal', max_length=10)),
                ('scheduled_at', models.DateTimeField()),
                ('max_retries', models.IntegerField(default=3)),
                ('retry_count', models.IntegerField(default=0)),
                ('context_data', models.JSONField(default=dict)),
                ('is_processed', models.BooleanField(default=False)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'email_queue',
                'ordering': ['priority', 'scheduled_at'],
            },
        ),
        migrations.CreateModel(
            name='WeeklyProgressReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('week_start', models.DateField()),
                ('week_end', models.DateField()),
                ('videos_completed', models.IntegerField(default=0)),
                ('total_videos', models.IntegerField(default=0)),
                ('quizzes_completed', models.IntegerField(default=0)),
                ('total_quizzes', models.IntegerField(default=0)),
                ('assignments_completed', models.IntegerField(default=0)),
                ('total_assignments', models.IntegerField(default=0)),
                ('time_spent', models.IntegerField(default=0)),
                ('report_generated', models.BooleanField(default=False)),
                ('email_sent', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='courses.course')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'weekly_progress_reports',
                'unique_together': {('user', 'course', 'week_start')},
            },
        ),
    ]
