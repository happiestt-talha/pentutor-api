# Generated by Django 5.2.1 on 2025-08-19 12:07

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('authentication', '0002_initial'),
        ('meetings', '0002_meeting_allow_student_recording_access'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='LiveClassSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('schedule_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('subject', models.CharField(max_length=200)),
                ('classes_per_week', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('class_days', models.JSONField(help_text="List of days like ['monday', 'wednesday', 'friday']")),
                ('class_times', models.JSONField(help_text="Dict with day:time mapping like {'monday': '18:00', 'wednesday': '19:00'}")),
                ('class_duration', models.PositiveIntegerField(default=60, help_text='Duration in minutes')),
                ('weekly_payment', models.DecimalField(decimal_places=2, max_digits=10)),
                ('monthly_payment', models.DecimalField(decimal_places=2, max_digits=10)),
                ('is_active', models.BooleanField(default=True)),
                ('demo_completed', models.BooleanField(default=False)),
                ('demo_date', models.DateTimeField(blank=True, null=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='live_schedules', to='authentication.studentprofile')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='live_schedules', to='authentication.teacherprofile')),
            ],
            options={
                'unique_together': {('teacher', 'student', 'subject')},
            },
        ),
        migrations.CreateModel(
            name='LiveClassSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('scheduled_datetime', models.DateTimeField()),
                ('actual_datetime', models.DateTimeField(blank=True, null=True)),
                ('duration', models.PositiveIntegerField(help_text='Actual duration in minutes')),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('ongoing', 'Ongoing'), ('completed', 'Completed'), ('missed', 'Missed'), ('rescheduled', 'Rescheduled'), ('cancelled', 'Cancelled')], default='scheduled', max_length=20)),
                ('is_demo', models.BooleanField(default=False)),
                ('student_joined', models.BooleanField(default=False)),
                ('teacher_joined', models.BooleanField(default=False)),
                ('join_time_student', models.DateTimeField(blank=True, null=True)),
                ('join_time_teacher', models.DateTimeField(blank=True, null=True)),
                ('teacher_notes', models.TextField(blank=True)),
                ('student_feedback', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('meeting', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='meetings.meeting')),
                ('schedule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='individual_live_class.liveclassschedule')),
            ],
            options={
                'ordering': ['scheduled_datetime'],
            },
        ),
        migrations.CreateModel(
            name='ClassReschedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original_datetime', models.DateTimeField()),
                ('new_datetime', models.DateTimeField()),
                ('reason', models.TextField()),
                ('is_approved', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='approved_reschedules', to=settings.AUTH_USER_MODEL)),
                ('requested_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reschedules', to='individual_live_class.liveclasssession')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='LiveClassSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subscription_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('subscription_type', models.CharField(choices=[('weekly', 'Weekly'), ('monthly', 'Monthly')], max_length=20)),
                ('amount_paid', models.DecimalField(decimal_places=2, max_digits=10)),
                ('classes_included', models.PositiveIntegerField()),
                ('classes_attended', models.PositiveIntegerField(default=0)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('status', models.CharField(choices=[('active', 'Active'), ('expired', 'Expired'), ('cancelled', 'Cancelled')], default='active', max_length=20)),
                ('payment_date', models.DateTimeField(auto_now_add=True)),
                ('payment_method', models.CharField(blank=True, max_length=50)),
                ('transaction_id', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('schedule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to='individual_live_class.liveclassschedule')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authentication.studentprofile')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='liveclasssession',
            name='subscription',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='individual_live_class.liveclasssubscription'),
        ),
        migrations.CreateModel(
            name='LiveClassPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_method', models.CharField(max_length=50)),
                ('transaction_reference', models.CharField(max_length=100, unique=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed'), ('refunded', 'Refunded')], default='pending', max_length=20)),
                ('gateway_response', models.JSONField(blank=True, default=dict)),
                ('failure_reason', models.TextField(blank=True)),
                ('initiated_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authentication.studentprofile')),
                ('schedule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='individual_live_class.liveclassschedule')),
                ('subscription', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='payment_record', to='individual_live_class.liveclasssubscription')),
            ],
            options={
                'ordering': ['-initiated_at'],
            },
        ),
    ]
