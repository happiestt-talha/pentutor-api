# Generated by Django 5.2.1 on 2025-08-16 11:34

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('authentication', '0002_initial'),
        ('courses', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='JobPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('subject_text', models.CharField(blank=True, help_text='Or enter subject as text', max_length=100)),
                ('teaching_mode', models.CharField(choices=[('remote', 'Remote'), ('physical', 'Physical')], default='remote', max_length=10)),
                ('budget_amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('budget_type', models.CharField(choices=[('per_hour', 'Per Hour'), ('per_day', 'Per Day'), ('total', 'Total Amount')], default='per_hour', max_length=10)),
                ('duration_value', models.PositiveIntegerField(help_text='Number of hours/days/sessions')),
                ('duration_unit', models.CharField(default='hours', help_text='e.g., hours, days, sessions', max_length=20)),
                ('additional_notes', models.TextField(blank=True)),
                ('location', models.CharField(blank=True, help_text='Required for physical teaching mode', max_length=200)),
                ('status', models.CharField(choices=[('open', 'Open'), ('accepted', 'Accepted'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='open', max_length=15)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deadline', models.DateTimeField(blank=True, help_text='When do you need this to be completed?', null=True)),
                ('course', models.ForeignKey(blank=True, help_text='Select a course if available', null=True, on_delete=django.db.models.deletion.SET_NULL, to='courses.course')),
                ('selected_teacher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='accepted_jobs', to='authentication.teacherprofile')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_posts', to='authentication.studentprofile')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='JobApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cover_letter', models.TextField(help_text='Why are you the right fit for this job?')),
                ('proposed_rate', models.DecimalField(blank=True, decimal_places=2, help_text="Leave blank to accept student's budget", max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('rejected', 'Rejected')], default='pending', max_length=10)),
                ('applied_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_applications', to='authentication.teacherprofile')),
                ('job_post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='job_board.jobpost')),
            ],
            options={
                'ordering': ['-applied_at'],
            },
        ),
        migrations.CreateModel(
            name='JobReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(choices=[(1, '1 Star'), (2, '2 Stars'), (3, '3 Stars'), (4, '4 Stars'), (5, '5 Stars')])),
                ('comment', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('job_post', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='review', to='job_board.jobpost')),
                ('reviewed', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_reviews', to=settings.AUTH_USER_MODEL)),
                ('reviewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='given_reviews', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddIndex(
            model_name='jobpost',
            index=models.Index(fields=['status', 'created_at'], name='job_board_j_status_b90250_idx'),
        ),
        migrations.AddIndex(
            model_name='jobpost',
            index=models.Index(fields=['student', 'status'], name='job_board_j_student_06c0cc_idx'),
        ),
        migrations.AddIndex(
            model_name='jobapplication',
            index=models.Index(fields=['job_post', 'status'], name='job_board_j_job_pos_77deb0_idx'),
        ),
        migrations.AddIndex(
            model_name='jobapplication',
            index=models.Index(fields=['teacher', 'status'], name='job_board_j_teacher_01a928_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='jobapplication',
            unique_together={('job_post', 'teacher')},
        ),
    ]
